name: "Test & Publish"
on:
  push:
    branches:
      - '**'
    branches-ignore::
      - wip-*
  create:

env:
  IMAGE_TAG_LIST: "texlive-image-tags"

jobs:
  diagnostics:
    name: Log Workflow Information
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: "Git Revision"
        run: echo "${GITHUB_REF}"
      - name: "Github Event"
        run: echo -e '${{ toJSON(github.event) }}'
        # TODO: figure out why this sometimes fails (for branches?)

  test-create-minimal:
    name: "Test: Create Minimal Image"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: "Build Test Image"
        run: .github/scripts/build-image.sh ${GITHUB_REF} minimal
      - name: "Test: Print version"
        run: docker run --rm $(head -n 1 "${IMAGE_TAG_LIST}") version

  test-run-examples:
    name: "Test: Run Usage Examples"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: "Build Test Image"
        run: .github/scripts/build-image.sh ${GITHUB_REF} base-luatex
      - name: "Test: One-off build"
        run: .github/scripts/run-example.sh $(head -n 1 "${IMAGE_TAG_LIST}") one-off-build
      - name: "Test: Repeated build"
        run: .github/scripts/run-example.sh $(head -n 1 "${IMAGE_TAG_LIST}") repeated-build
      - name: "Test: Complex build"
        run: .github/scripts/run-example.sh $(head -n 1 "${IMAGE_TAG_LIST}") complex-build
      - name: "Test: Interactive build"
        run: .github/scripts/run-example.sh $(head -n 1 "${IMAGE_TAG_LIST}") interactive-build
      - name: "Test: Custom Image"
        run: .github/scripts/run-example.sh $(head -n 1 "${IMAGE_TAG_LIST}") custom-image

  publish-release:
    name: Publish Images
    runs-on: ubuntu-latest
    needs:
      - test-create-minimal
      - test-run-examples
    if: startsWith(github.ref, 'refs/tags/pre-') || startsWith(github.ref, 'refs/tags/release-')
    steps:
      - uses: actions/checkout@v1
      - name: Build images
        run: |
          for p in profiles/*; do
            p=$(basename ${p})
            .github/scripts/build-image.sh ${GITHUB_REF} ${p%.profile}
          done
      - name: Publish images
        env:
          DOCKERHUB_ACCESS_TOKEN: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
        run: | # TODO: really publish
          while IFS= read -r tag; do
             echo "publish: ${tag}"
          done <"${IMAGE_TAG_LIST}"
      - name: Create Github release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "nyi (create release)" # TODO: create release
        # --> https://github.com/actions/create-release
